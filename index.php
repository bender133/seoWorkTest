<?php

$someNumbers = [
    '11111111111111111111111111111111111111111111111111',
    '11111111111111111111111111111111111111111111111111',
    '11111111111111111111111111111111111111111111111111',
    '11111111111111111111111111111111111111111111111111',
    '11111111111111111111111111111111111111111111111111',
    '11111111111111111111111111111111111111111111111111',
    '11111111111111111111111111111111111111111111111111',
    '11111111111111111111111111111111111111111111111111',
    '11111111111111111111111111111111111111111111111111',
    '11111111111111111111111111111111111111111111111111',
    '11111111111111111111111111111111111111111111111111',
    '11111111111111111111111111111111111111111111111111',
    '11111111111111111111111111111111111111111111111111',
    '11111111111111111111111111111111111111111111111111',
    '11111111111111111111111111111111111111111111111111',
    '11111111111111111111111111111111111111111111111111',
    '11111111111111111111111111111111111111111111111111',
    '11111111111111111111111111111111111111111111111111',
    '11111111111111111111111111111111111111111111111111',
    '11111111111111111111111111111111111111111111111111',
    '11111111111111111111111111111111111111111111111111',
    '11111111111111111111111111111111111111111111111111',
    '11111111111111111111111111111111111111111111111111',
    '11111111111111111111111111111111111111111111111111',
    '11111111111111111111111111111111111111111111111111',
    '11111111111111111111111111111111111111111111111111',
    '11111111111111111111111111111111111111111111111111',
    '11111111111111111111111111111111111111111111111111',
    '11111111111111111111111111111111111111111111111111',
    '11111111111111111111111111111111111111111111111111',
    '11111111111111111111111111111111111111111111111111',
    '11111111111111111111111111111111111111111111111111',
    '11111111111111111111111111111111111111111111111111',
    '11111111111111111111111111111111111111111111111111',
    '11111111111111111111111111111111111111111111111111',
    '11111111111111111111111111111111111111111111111111',
    '11111111111111111111111111111111111111111111111111',
    '11111111111111111111111111111111111111111111111111',
    '11111111111111111111111111111111111111111111111111',
    '11111111111111111111111111111111111111111111111111',
    '11111111111111111111111111111111111111111111111111',
    '11111111111111111111111111111111111111111111111111',
    '11111111111111111111111111111111111111111111111111',
    '11111111111111111111111111111111111111111111111111',
    '11111111111111111111111111111111111111111111111111',
    '11111111111111111111111111111111111111111111111111',
    '11111111111111111111111111111111111111111111111111',
    '11111111111111111111111111111111111111111111111111',
    '11111111111111111111111111111111111111111111111111',
    '11111111111111111111111111111111111111111111111111',
    '11111111111111111111111111111111111111111111111111',
    '11111111111111111111111111111111111111111111111111',
    '11111111111111111111111111111111111111111111111111',
    '11111111111111111111111111111111111111111111111111',
    '11111111111111111111111111111111111111111111111111',
    '11111111111111111111111111111111111111111111111111',
    '11111111111111111111111111111111111111111111111111',
    '11111111111111111111111111111111111111111111111111',
    '11111111111111111111111111111111111111111111111111',
    '11111111111111111111111111111111111111111111111111',
    '11111111111111111111111111111111111111111111111111',
];

$jsonLongIntArray = json_encode($someNumbers);

/**
 * @param array $someNumbers
 *
 * @return string
 */
function oneMethod(array $someNumbers): string
{
    $prev = '0';
    foreach ($someNumbers as $number) {
        $prev = gmp_add($prev, $number);
    }
    
    return gmp_strval($prev);
}

/**
 * @param string $num1
 * @param string $num2
 *
 * @return string
 */
function twoMethod(
    string $num1,
    string $num2
): string
{
    $result = '';
    $max    = max($num1, $num2);
    $min    = min($num1, $num2);
    $min    = str_pad($min, strlen($max), '0', STR_PAD_LEFT);
    $dec    = 0;
    
    for ($i = strlen($max) - 1; $i >= 0; $i--) {
        $sum    = $max[$i] + $min[$i] + $dec;
        $dec    = intdiv($sum, 10);
        $result .= ($dec === 1) ? $sum % 10 : $sum;
    }
    $result .= $dec ?: '';
    
    return strrev($result);
}

/**
 * @param $num1
 * @param $num2
 *
 * @return string
 */
function threeMethod(
    $num1,
    $num2
): string
{
    return bcadd($num1, $num2);
}

/**
 * @param array    $someNumbers
 * @param callable $callback
 *
 * @return string
 */
function sumHelper(
    array $someNumbers,
    callable $callback
): string
{
    $prev = '0';
    foreach ($someNumbers as $number) {
        $prev = $callback($prev, $number);
    }
    
    return $prev;
}

echo '1- ' . oneMethod($someNumbers) . '<hr>';
echo '2- ' . sumHelper($someNumbers, 'twoMethod') . '<hr>';
echo '3- ' . sumHelper($someNumbers, 'threeMethod') . '<hr>';
?>
<script>
    let jsonLongIntArray = <?= $jsonLongIntArray ?>;
    let res = 0n;
    for (let i = 0; i < jsonLongIntArray.length; i++) {
        res += BigInt(jsonLongIntArray[i]);
    }
    document.body.append('4- ' + res)
</script>
